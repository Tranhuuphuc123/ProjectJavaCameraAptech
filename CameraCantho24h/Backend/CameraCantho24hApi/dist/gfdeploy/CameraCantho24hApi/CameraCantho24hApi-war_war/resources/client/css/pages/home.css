/****css của phần body container của trang homepage*****/

    /*********************************************************************************************************************/
    /**************************************************CONTAINER*********************************/
    /*******BANNNER SWIPPER*********/
    .banner{
         /* Đặt kích thước và vị trí cho banner */
        width: 100%;
        height: 620px;
        /*thuộc tính đị vị trí với relative giúp cho nó định vì trí tuyệt đói
        mà không làm ảnh hưởng tới các tp khác*/
        position: relative;
        margin-bottom: 5px;
        /* Xác định overflow, overflow sử dụng để quy định cách xử lý nội
         dung của một phần tử khi nó vượt ra khỏi kích thước của phần tử đó. 
         => hiden sẽ giúp ẩn hay cắt bỏ các phần tử vượt qua ngoài pv cho phép*/
        overflow: hidden;
    }
    .banner__container{
        position: absolute;
        left:50%;
        top:50%;
        transform: translate(-50%,-50%);
        width:100%;
        height:600px;
        padding:50px;
        background-color: #fffdf6;
        box-shadow: 0 30px 50px #fffdf6;
    }
    #slide{
        width:max-content;
        margin-top:50px;
    }
    .item{
        width:200px;
        height:300px;
        background-position: 50% 50%;
        display: inline-block;
        transition: 0.5s;
        background-size: cover;
        position: absolute;
        z-index: 1;
        top:50%;
        transform: translate(0,-50%);
        border-radius: 20px;
        box-shadow:  0 30px 50px #505050;
    }
    .item:nth-child(1),
    .item:nth-child(2){
        left:0;
        top:0;
        transform: translate(0,0);
        border-radius: 0;
        width:100%;
        height:100%;
        box-shadow: none;
    }
    .item:nth-child(3){
        left:50%;
    }
    .item:nth-child(4){
        left:calc(50% + 220px);
    }
    .item:nth-child(5){
        left:calc(50% + 440px);
    }
    .item:nth-child(n+6){
        left:calc(50% + 660px);
        opacity: 0;
    }
    .item .content{
        position: absolute;
        top:50%;
        left:100px;
        width:300px;
        text-align: left;
        padding:0;
        color:#eee;
        transform: translate(0,-50%);
        display: none;
        font-family: system-ui;
    }
    .item:nth-child(2) .content{
        display: block;
        z-index: 11111;
    }
    .item .name{
        font-size: 40px;
        font-weight: bold;
        opacity: 0;
        animation:showcontent 1s ease-in-out 1 forwards
    }
    .item .des{
        margin:20px 0;
        opacity: 0;
        animation:showcontent 1s ease-in-out 0.3s 1 forwards
    }
    .item button{
        padding:10px 20px;
        border:none;
        opacity: 0;
        animation:showcontent 1s ease-in-out 0.6s 1 forwards
    }
    @keyframes showcontent{
        from{
            opacity: 0;
            transform: translate(0,100px);
            filter:blur(33px);
        }to{
            opacity: 1;
            transform: translate(0,0);
            filter:blur(0);
        }
    }
    .buttons{
        position: absolute;
        bottom:30px;
        z-index: 22222;
        text-align: center;
        width:100%;
    }
    .buttons button{
        width:50px;
        height:50px;
        border-radius: 50%;
        border:1px solid #555;
        transition: 0.5s;
    }.buttons button:hover{
        background-color: #bac383;
    }
      

   /*reponsice cho mục banner khi nó đat dưới 991px */ 
   @media(max-width: 991px) {
    .banner {
        height: 700px;
    }
    .banner__container {
        width: 90%; /* Điều chỉnh chiều rộng container */
        height: auto; /* Thay đổi chiều cao thành tự động */
        padding: 20px; /* Điều chỉnh khoảng cách đệm */
        left: 50%; /* Đặt lại vị trí trái của container */
        top: 50%; /* Đặt lại vị trí trên của container */
        transform: translate(-50%, -50%); /* Dịch chuyển container */
    }
    .item {
        width: 90%; /* Thay đổi chiều rộng của các item */
        height: auto; /* Thay đổi chiều cao của các item thành tự động */
        position: relative; /* Đặt lại vị trí của các item */
        top: auto; /* Đặt lại vị trí top của các item */
        transform: none; /* Đặt lại transform của các item */
        box-shadow: none; /* Xóa bóng đổ của các item */
        border-radius: 0; /* Xóa bo góc của các item */
        margin-bottom: 20px; /* Điều chỉnh khoảng cách giữa các item */
    }
    .item .content {
        position: static; /* Đặt lại vị trí của nội dung */
        transform: none; /* Đặt lại transform của nội dung */
        opacity: 1; /* Hiển thị nội dung */
        filter: blur(0); /* Xóa hiệu ứng mờ */
    }
    .buttons {
        position: static; /* Đặt lại vị trí của nút điều hướng */
        bottom: auto; /* Đặt lại vị trí bottom của nút điều hướng */
        margin-top: 20px; /* Điều chỉnh khoảng cách từ trên xuống của nút điều hướng */
    }
}




/***************CONTAINER**********************/

/********danh mục sản phẩm**********/
  /*tạo thẻ box cho mục categories*/
  .cardcate-all{
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 5vh;
  }
  .cardcate{
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 100px 50px;
    padding: 5px 0px;
    /* background: rgb(107, 103, 103); */

  }
  .cardcate .cardcate__main{
    position: relative;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    width: 150px;
    min-width: 100%;
    height: 120px;
    background: #fff;
    border-radius: 20px;
    transition: 0.5%;
    box-shadow: 0 35px 80px rgba(30, 30, 30, 0.15);
  }
  .cardcate .cardcate__main:hover{
    height: 150px;
  }

  .cardcate .cardcate__main .img-box{
    position: absolute;
    top: 20px;
    width: 140px;
    height: 100px;
    border-radius: 12px;
    overflow: hidden;
    transition: 0.5s;
  }
  .cardcate .cardcate__main:hover .img-box{
    top:-14px;
    scale:0.3;
    box-shadow: 0 15px 45px rgba(195, 187, 187, 0.2);
  }

  .cardcate .cardcate__main .img-box img{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    /* -> object-fit: cover; hình ảnh sẽ được thu phóng hoặc co lại để phù hợp với
    kích thước của phần tử mà nó được đặt trong, nhưng không bị méo hoặc biến dạng. 
      -> Hình ảnh sẽ được cắt để điều chỉnh kích thước của phần tử, sao cho nó che
       phủ hoàn toàn và không bị méo.*/
    object-fit: cover;
  }

  .cardcate .cardcate__main .content{
    position: absolute;
    top: 130px;
    width: 100%;
    height: 35px;
    padding: 5px 0;
    text-align: center;
    /*Thuộc tính CSS overflow: hidden; được sử dụng để xác định cách nội dung 
    sẽ được xử lý khi nó vượt ra ngoài phần tử chứa. Khi bạn đặt overflow: hidden; 
    cho một phần tử, bất kỳ nội dung nào vượt ra khỏi phần tử đó sẽ bị ẩn đi*/
    overflow: hidden;
    transition: 0.2s;
  }
  .cardcate .cardcate__main:hover .content{
    top:45px;
    height: 200px;
  }
  .cardcate .cardcate__main .content h2{
    font-size: 1.5rem;
    font-weight: 700;
    color:var(--clr)
  }
  .cardcate .cardcate__main .content p{
    color: #b91818;
  }

  .cardcate .cardcate__main .content a{
    position: relative;
    top: 15px;
    display: inline-block;
    text-decoration: none;
    padding: 12px 25px;
    background: var(--clr);
    color: #fff;
    font-weight: 500;
  }

  .cardcate .cardcate__main .content a:hover{
    opacity: 0.8;
  }

  /*reponsive cho thẻ box*/
  

  /**********làm mục sản phẩm trong trang homepage***************/
  .cardproduct-all{
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100vh;
    margin-top: 0px;
  }
  .cardproduct-title{
    display: flex;
    justify-content: center;
    align-items: center;
  }
  .cardproduct-title p{
    font-size: 30px;
    font-weight: bold;
    color: black;
    padding: 20px 0;
  }
  .cardproduct-group{
    display: flex;
    /*gap là một thuộc tính mới của CSS Grid và Flexbox để xác 
    định khoảng cách giữa các phần tử con
    => trong th này gap dùng để xác định một khoảng cách là 25 pixel 
    giữa các phần tử con khi chúng được hiển thị dưới dạng một dãy 
    linh hoạt bằng cách sử dụng display: flex;. */
    gap: 25px;
  }
  .cardproduct{
    width: 225px;
    height: 400px;
    border-radius: 16px;
    overflow: hidden;
    position: relative;
    transition: 0.5s;
    cursor: pointer;

  }
  .cardproduct img{
    width: 100%;
    height: 100%;
    /*Thuộc tính object-fit trong CSS được sử dụng để xác định cách một 
    hình ảnh hoặc video phải thích ứng với kích thước của phần tử cha mà 
    nó đang nằm trong*/
    object-fit: cover;
    /*Trong CSS, pointer-events là một thuộc tính được sử dụng để kiểm soát cách 
    phần tử xử lý các sự kiện liên quan đến con trỏ chuột. */
    pointer-events: none;
    transition: 0.5s;
  }
  .cardproduct .layer{
    background:linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0));
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 75%;
    opacity: 0;
    transition: 0.3s;
  }

  .cardproduct .info{
    position: absolute;
    bottom: -50%;
    opacity: 0;
    padding: 10px;
    transition: 0.5s bottom, 1.75s opacity;
    color: #fff;
  }
  .info h1{
    color: #a50d0d;
  }
  .info p{
    font-size: 14px;
    margin-top: 3px;
  }

  .info button{
    background: #490ccc;
    border:none;
    padding: 8px;
    font-weight: bold;
    border-radius: 8px;
    margin-top: 8px;
  }

  .cardproduct:hover,
  .cardproduct:hover img,
  .cardproduct:hover .layer{
    transform: scale(1.1s);
  }
  .cardproduct:hover > .layer{
    opacity: 1;
  }

  .cardproduct:hover > .info{
    bottom: 0;
    opacity: 1;
  }

  /*Đoạn mã CSS này áp dụng một hiệu ứng mờ (blur) lên các phần tử khi người dùng di chuột qua nhóm đó, 
  nhưng không di chuột vào chính phần tử
  => :not(:hover): Đây là một pseudo-class, áp dụng các quy tắc CSS cho các phần tử .card 
  không được di chuột qua. Nó đảm bảo rằng hiệu ứng chỉ được áp dụng cho các .card mà người
   dùng không đang di chuột vào.
   
  = filter: blur(5px);: Đây là thuộc tính CSS filter được sử dụng để áp dụng hiệu ứng mờ (blur)
   lên phần tử. Trong trường hợp này, giá trị blur(5px) làm mờ phần tử 5 pixel. Đ
      iều này tạo ra một hiệu ứng mờ khi người dùng di chuột qua các .card-group, nhưng không di 
   chuột vào từng .card cụ thể.*/
  .cardproduct-group:hover > .cardproduct:not(:hover){
    filter:blur(5px);
  }







